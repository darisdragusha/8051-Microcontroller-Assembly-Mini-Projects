; IN PORT P1 AND P2 ARE CONNECTED HEX KEYBOARD KEYS (1 KEY PER INPUT). OUTPUT IN THE HEX 7SEGMENT THE PRESSED KEY, IF MULTIPLE, OUTPUT '-' AND IF 0 CLEAR DISPLAY

	ORG	0000H

MAIN:
	CLR	A
	ACALL	GET_KEY_PRESSED
	MOV	A, B
	ACALL	DISPLAY_KEY
	SJMP	MAIN

GET_KEY_PRESSED:
	JNB	P1.0, CHECK_1
	MOV	B, #0
	INC	A
CHECK_1:
	JNB	P1.1, CHECK_2
	MOV	B, #1
	INC	A
CHECK_2:
	JNB	P1.2, CHECK_3
	MOV	B, #2
	INC	A
CHECK_3:
	JNB	P1.3, CHECK_4
	MOV	B, #3
	INC	A
CHECK_4:
	JNB	P1.4, CHECK_5
	MOV	B, #4
	INC	A
CHECK_5:
	JNB	P1.5, CHECK_6
	MOV	B, #5
	INC	A
CHECK_6:
	JNB	P1.6, CHECK_7
	MOV	B, #6
	INC	A
CHECK_7:
	JNB	P1.7, CHECK_8
	MOV	B, #7
	INC	A
CHECK_8:
	JNB	P2.0, CHECK_9
	MOV	B, #8
	INC	A
CHECK_9:
	JNB	P2.1, CHECK_A
	MOV	B, #9
	INC	A
CHECK_A:
	JNB	P2.2, CHECK_B
	MOV	B, #10
	INC	A
CHECK_B:
	JNB	P2.3, CHECK_C
	MOV	B, #11
	INC	A
CHECK_C:
	JNB	P2.4, CHECK_D
	MOV	B, #12
	INC	A
CHECK_D:
	JNB	P2.5, CHECK_E
	MOV	B, #13
	INC	A
CHECK_E:
	JNB	P2.6, CHECK_F
	MOV	B, #14
	INC	A
CHECK_F:
	JNB	P2.7, DONE
	MOV	B, #15
	INC	A
DONE:
	CJNE	A, #01, CHECK_MUL_OR_ZERO
	RET
CHECK_MUL_OR_ZERO:
	CJNE	A, #0, MULTIPLE
	MOV	B, #16
MULTIPLE:
	MOV	B, #17
	RET




DISPLAY_KEY:
	MOV	DPTR, #SEG
	MOVC	A, @A+DPTR
	MOV	P0, A
	RET

SEG:	DB	0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F	; 0-9
	DB	0x77, 0x7C, 0x58, 0x5E, 0x79, 0x71	; A-F
	DB	0xFF, 0xBF	; CLEAR DISPLAY AND '-'

